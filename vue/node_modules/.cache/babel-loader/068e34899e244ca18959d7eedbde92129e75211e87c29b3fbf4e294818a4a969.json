{"ast":null,"code":"export default {\n  name: \"Staff\",\n  data() {\n    return {\n      departmentTree: [],\n      // 所有的数据\n      departmentList: [],\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      departmentName: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleNodeClick(node) {\n      this.$set(this.form, 'departmentId', node.id);\n      this.$refs.selectTree.blur();\n    },\n    changeStatus(row) {\n      this.$request.put('/staff/update', row).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('保存成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/staff/update' : '/staff/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/staff/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/staff/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/staff/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          departmentName: this.departmentName\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n      this.$request.get('/department/selectTree').then(res => {\n        this.departmentTree = res.data || [];\n      });\n      this.$request.get('/department/selectAll').then(res => {\n        this.departmentList = res.data || [];\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","departmentTree","departmentList","tableData","pageNum","pageSize","total","username","departmentName","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","handleNodeClick","node","$set","id","$refs","selectTree","blur","changeStatus","row","$request","put","then","res","code","$message","success","error","msg","handleAdd","handleEdit","stringify","save","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/Staff.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入账号查询\" style=\"width: 200px\" v-model=\"username\"></el-input>\r\n      <el-input placeholder=\"请输入部门查询\" style=\" width: 200px; margin-left: 10px\" v-model=\"departmentName\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column label=\"头像\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\r\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"账号\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"sex\" label=\"性别\"></el-table-column>\r\n        <el-table-column prop=\"birth\" label=\"生日\"></el-table-column>\r\n        <el-table-column prop=\"departmentName\" label=\"部门\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"禁用\">\r\n          <template v-slot=\"scope\">\r\n            <el-switch v-model=\"scope.row.status\" active-color=\"#ff4949\" inactive-color=\"#aaa\" @change=\"changeStatus(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"role\" label=\"角色\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"员工\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"头像\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传头像</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"sex\">\r\n          <el-radio-group v-model=\"form.sex\">\r\n            <el-radio label=\"男\"></el-radio>\r\n            <el-radio label=\"女\"></el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"生日\" prop=\"birth\">\r\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\r\n                          v-model=\"form.birth\" style=\"width: 100%\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"部门\" prop=\"departmentId\">\r\n          <el-select ref=\"selectTree\" v-model=\"form.departmentId\" clearable style=\"width: 100%;\">\r\n            <el-option\r\n                v-for=\"(item, index) in departmentList\"\r\n                :key=\"index\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n                style=\"display: none;\"/>\r\n\r\n            <el-tree\r\n                :data=\"departmentTree\"\r\n                :props=\"{children: 'children', label: 'name'}\"\r\n                highlight-current\r\n                @node-click=\"handleNodeClick\"\r\n                default-expand-all />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"禁用\" prop=\"status\">\r\n          <el-switch v-model=\"form.status\" active-color=\"#ff4949\" inactive-color=\"#aaa\"></el-switch>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Staff\",\r\n  data() {\r\n    return {\r\n      departmentTree: [],  // 所有的数据\r\n      departmentList: [],\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      username: null,\r\n      departmentName:null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    handleNodeClick(node) {\r\n      this.$set(this.form, 'departmentId', node.id)\r\n      this.$refs.selectTree.blur()\r\n    },\r\n    changeStatus(row){\r\n      this.$request.put('/staff/update',row).then(res=>{\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('保存成功')\r\n          this.load(1)\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/staff/update' : '/staff/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/staff/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/staff/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/staff/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          username: this.username,\r\n          departmentName: this.departmentName,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n      this.$request.get('/department/selectTree').then(res => {\r\n        this.departmentTree = res.data || []\r\n      })\r\n\r\n      this.$request.get('/department/selectAll').then(res => {\r\n        this.departmentList = res.data || []\r\n      })\r\n    },\r\n    reset() {\r\n      this.username = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}