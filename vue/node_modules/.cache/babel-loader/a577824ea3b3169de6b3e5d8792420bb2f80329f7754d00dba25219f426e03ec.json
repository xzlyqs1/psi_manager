{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        role: 'ADMIN'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      codeImg: '',\n      uuid: ''\n    };\n  },\n  mounted() {\n    this.getCode();\n  },\n  methods: {\n    getCode() {\n      this.uuid = generateUUID();\n      this.codeImg = this.$baseUrl + '/getValidateCode?key=' + this.uuid;\n    },\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.form.key = this.uuid;\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.getCode();\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};\n\n// 生成UUID 唯一编码\nfunction generateUUID() {\n  let d = new Date().getTime();\n  if (window.performance && typeof window.performance.now === \"function\") {\n    d += performance.now(); //use high-precision timer if available\n  }\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}","map":{"version":3,"names":["name","data","form","role","rules","username","required","message","trigger","password","code","codeImg","uuid","mounted","getCode","methods","generateUUID","$baseUrl","login","$refs","validate","valid","key","$request","post","then","res","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","d","Date","getTime","window","performance","now","replace","c","r","Math","random","floor","toString"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 350px; padding: 50px 30px; background-color: rgba(0,0,0,.3); border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,.1)\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #046fdc\"><b>欢迎使用企业进销存管理系统</b></div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-select style=\"width: 100%\" v-model=\"form.role\">\r\n            <el-option v-for=\"item in [{ name: '管理员', value: 'ADMIN' }, { name: '员工', value: 'STAFF' }]\" :key=\"item.value\" :value=\"item.value\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <div style=\"display: flex\">\r\n            <el-input style=\"flex: 1\" v-model=\"form.code\" placeholder=\"请输入验证码\"></el-input>\r\n            <div style=\"flex: 1; margin-left: 10px\"><img @click=\"getCode()\" :src=\"codeImg\" style=\"width: 100%; height: 30px\"/></div>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #176fd6; border-color: #176fd6; color: white\" @click=\"login\">登 录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            <a style=\"color: #046fdc; font-weight: bold\" href=\"/register\">注册员工号</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: { role: 'ADMIN' },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n        ]\r\n      },\r\n      codeImg: '',\r\n      uuid: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getCode()\r\n  },\r\n  methods: {\r\n    getCode() {\r\n      this.uuid = generateUUID()\r\n      this.codeImg = this.$baseUrl + '/getValidateCode?key=' + this.uuid\r\n    },\r\n    login() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.form.key = this.uuid\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.getCode()\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// 生成UUID 唯一编码\r\nfunction generateUUID() {\r\n  let d = new Date().getTime();\r\n  if (window.performance && typeof window.performance.now === \"function\") {\r\n    d += performance.now(); //use high-precision timer if available\r\n  }\r\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    let r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":";AAsCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QAAAC,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,IAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAG,OAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAD,QAAA;MACA,KAAAF,IAAA,GAAAI,YAAA;MACA,KAAAL,OAAA,QAAAM,QAAA,kCAAAL,IAAA;IACA;IACAM,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAnB,IAAA,CAAAoB,GAAA,QAAAV,IAAA;UACA,KAAAW,QAAA,CAAAC,IAAA,gBAAAtB,IAAA,EAAAuB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAhB,IAAA;cACAiB,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAAzB,IAAA;cACA,KAAA8B,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAApB,OAAA;cACA,KAAAmB,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA;;AAEA;AACA,SAAApB,aAAA;EACA,IAAAqB,CAAA,OAAAC,IAAA,GAAAC,OAAA;EACA,IAAAC,MAAA,CAAAC,WAAA,WAAAD,MAAA,CAAAC,WAAA,CAAAC,GAAA;IACAL,CAAA,IAAAI,WAAA,CAAAC,GAAA;EACA;EACA,IAAA9B,IAAA,0CAAA+B,OAAA,oBAAAC,CAAA;IACA,IAAAC,CAAA,IAAAR,CAAA,GAAAS,IAAA,CAAAC,MAAA;IACAV,CAAA,GAAAS,IAAA,CAAAE,KAAA,CAAAX,CAAA;IACA,QAAAO,CAAA,WAAAC,CAAA,GAAAA,CAAA,cAAAI,QAAA;EACA;EACA,OAAArC,IAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}